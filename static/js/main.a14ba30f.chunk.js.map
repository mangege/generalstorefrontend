{"version":3,"sources":["AuthContext.js","components/Header.js","components/HomePage.js","components/LoginPage.js","App.js","serviceWorker.js","index.js"],"names":["tokenKey","SetAuthTokenToLocal","aToken","Axios","defaults","headers","common","localStorage","setItem","AuthContext","React","createContext","authToken","setAuthToken","Header","useContext","className","to","onClick","Nav","href","Product","props","volume","itemAttrs","item","attributes","jpgUrl","pict_url","webpUrl","referral_url","srcSet","type","src","alt","title","price","orig_price","toFixed","component","data-clipboard-text","referral_word","ProductList","useState","items","setItems","prevItemIdsRef","useRef","getItems","prevItemIds","current","get","params","item_ids","join","then","resp","data","map","a","id","i","useEffect","dataLength","length","next","hasMore","loader","endMessage","key","Main","HomePage","RegisterTips","role","LoginPage","loginToken","setLoginToken","showRegisterTips","setShowRegisterTips","loginTips","setLoginTips","history","useHistory","login","post","uuid","push","catch","err","response","msg","value","onChange","event","target","onKeyPress","e","placeholder","baseURL","App","getItem","Provider","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a14ba30f.chunk.js","sourcesContent":["import React from 'react';\nimport Axios from 'axios';\n\nconst tokenKey = \"AuthToken\";\n\nexport function SetAuthTokenToLocal(aToken) {\n    Axios.defaults.headers.common['X-Token'] = aToken;\n    localStorage.setItem(tokenKey, aToken);\n}\n\nexport function GetAuthTokenByLocal() {\n    return localStorage.getItem(tokenKey) || '';\n}\n\nexport const AuthContext = React.createContext({\n    authToken: '', setAuthToken: () => { }\n});\n\nexport default AuthContext;","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport { AuthContext, SetAuthTokenToLocal } from '../AuthContext'\n\nfunction Header() {\n    const { authToken, setAuthToken } = React.useContext(AuthContext);\n\n    function logout() {\n        setAuthToken('');\n        SetAuthTokenToLocal('');\n    }\n    \n    return (\n        <header>\n            <nav className=\"navbar navbar-dark bg-dark\">\n                <div className=\"container d-flex justify-content-between\">\n                    <Link className=\"navbar-brand\" to=\"/\">解忧南杂店</Link>\n                    {authToken === '' &&\n                        <Link className=\"btn btn-outline-secondary\" to=\"/login\">登录</Link>\n                    }\n                    {authToken !== '' &&\n                        <button className=\"btn btn-outline-secondary\" onClick={logout}>注销</button>\n                    }\n                </div>\n            </nav>\n        </header>\n    );\n};\n\nexport default Header;","import React, { useState, useEffect, useRef } from 'react';\n\nimport Axios from 'axios';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Clipboard from 'react-clipboard.js';\n\nimport Header from './Header'\n\nfunction formatVolume(volume) {\n    if (volume >= 10000) {\n        return `${(volume / 10000).toFixed(0)}W`\n    }\n    if (volume >= 1000) {\n        return `${(volume / 1000).toFixed(0)}K`\n    }\n    return volume;\n}\n\nfunction Nav() {\n    return (\n        <ul className=\"nav d-flex justify-content-between\">\n            <li className=\"nav-item \">\n                <a className=\"nav-link text-muted\" href=\"/\">大额券</a>\n            </li>\n            <li className=\"nav-item\">\n                <a className=\"nav-link text-muted\" href=\"/\">限量抢</a>\n            </li>\n            <li className=\"nav-item\">\n                <a className=\"nav-link pr-0 text-muted\" href=\"/\">天猫国际精选</a>\n            </li>\n        </ul>\n    );\n};\n\nfunction Product(props) {\n    let itemAttrs = props.item.attributes;\n    let jpgUrl = `${itemAttrs.pict_url}_300x300Q90.jpg`;\n    let webpUrl = `${itemAttrs.pict_url}_300x300_.webp`;\n    return (\n        <div className=\"col-6 col-sm-6 col-md-4 col-lg-3 col-xl-3 p-1\">\n            <div className=\"card shadow-sm\">\n                <a href={itemAttrs.referral_url}>\n                    <picture>\n                        <source srcSet={webpUrl} type=\"image/webp\" />\n                        <source srcSet={jpgUrl} type=\"image/jpeg\" />\n                        <img src={jpgUrl} className=\"card-img-top\" alt={itemAttrs.title}></img>\n                    </picture>\n                </a>\n                <div className=\"card-body p-2 small\">\n                    <div className=\"mw-100 text-break text-truncate\"><a className=\"text-dark\" href={itemAttrs.referral_url}>{itemAttrs.title}</a>\n                    </div>\n                    <div className=\"text-dark d-flex justify-content-between\"><span>¥<span className=\"font-weight-bold\">{itemAttrs.price}</span> <span className=\"text-muted\">¥<del>{itemAttrs.orig_price}</del></span>\n                    </span><span className=\"text-muted\">已售 {formatVolume(itemAttrs.volume)}</span></div>\n                    <Clipboard component=\"button\" className=\"btn btn-primary btn-sm w-100 px-1\" data-clipboard-text={itemAttrs.referral_word}>{itemAttrs.referral_word||'暂无口令'}</Clipboard>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nfunction ProductList() {\n    const [items, setItems] = useState([]);\n    // https://zh-hans.reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n    const prevItemIdsRef = useRef([]);\n    function getItems() {\n        let prevItemIds = prevItemIdsRef.current;\n        Axios.get('/api/items', { params: { item_ids: prevItemIds.join(',') } }).then(resp => {\n            prevItemIdsRef.current = resp.data.data.map(a => a.id);\n            setItems(i => [...i, ...resp.data.data]);\n        });\n    }\n    useEffect(() => {\n        getItems()\n    }, [])\n    return (\n        <InfiniteScroll\n            dataLength={items.length}\n            next={() => { getItems() }}\n            hasMore={true}\n            loader={<div className=\" text-center\"><div className=\"spinner-border\"><p className=\"sr-only text-center\">加载中...</p></div></div>}\n            endMessage={\n                <p className=\"text-center\">没有了!</p>\n            }>\n            <div className=\"d-flex align-content-start flex-wrap py-1\">\n                {items.map((item) => <Product key={item.id} item={item} />)}\n            </div>\n        </InfiniteScroll >\n    );\n}\n\nfunction Main() {\n    return (\n        <main>\n            <div className=\"container\">\n                <Nav />\n            </div>\n            <div className=\"bg-light\">\n                <div className=\"container\">\n                    <ProductList />\n                </div>\n            </div>\n        </main>\n    );\n};\n\nfunction HomePage() {\n    return (\n        <div>\n            <Header />\n            <Main />\n        </div>\n    );\n}\n\nexport default HomePage;","import React, { useState, Fragment } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport Axios from 'axios';\nimport { AuthContext, SetAuthTokenToLocal } from '../AuthContext'\nimport Clipboard from 'react-clipboard.js';\n\nfunction RegisterTips() {\n    return (\n        <Fragment>\n            <div className=\"alert alert-success\" role=\"alert\">\n                注册成功!点击下文复制按钮复制登录口令,请妥善保存您的登录口令. <br />\n                点登录按钮即可登录.\n            </div>\n            <div className=\"alert alert-danger\" role=\"alert\">\n                注意:遗忘登录口令无法找回,即对应用户无法登录.\n            </div>\n        </Fragment>\n    );\n}\n\nfunction LoginPage() {\n    const [loginToken, setLoginToken] = useState('');\n    const [showRegisterTips, setShowRegisterTips] = useState(false);\n    const [loginTips, setLoginTips] = useState('');\n    const history = useHistory();\n    const { setAuthToken } = React.useContext(AuthContext);\n\n    function register() {\n        Axios.post('/api/users').then((resp) => {\n            if (resp.data.data && resp.data.data.attributes && resp.data.data.attributes.uuid) {\n                setLoginTips('');\n                setShowRegisterTips(true);\n                setLoginToken(resp.data.data.attributes.uuid);\n            }\n        }).catch((err) => {\n            setLoginTips(\"注册异常\");\n        });\n    }\n\n    function login() {\n        if (!loginToken || loginToken.length !== 36) {\n            setLoginTips('登录口令无效');\n            return;\n        }\n\n        Axios.post('/api/login', { uuid: loginToken }).then((resp) => {\n            if (resp.data.data && resp.data.data.attributes && resp.data.data.attributes.uuid === loginToken) {\n                setLoginTips('');\n                setAuthToken(loginToken);\n                SetAuthTokenToLocal(loginToken);\n                history.push('/');\n            } else {\n                setLoginTips('登录异常');\n            }\n        }).catch((err) => {\n            if (err.response && err.response.data && err.response.data.msg) {\n                setLoginTips(err.response.data.msg);\n            } else {\n                setLoginTips('登录异常');\n            }\n        });\n\n\n    }\n\n    function handleInputChange(event) {\n        setLoginToken(event.target.value);\n    }\n\n    return (\n        <div className=\"login-page bg-light\">\n            <div className=\"login-wrap\">\n                {showRegisterTips &&\n                    <RegisterTips />\n                }\n                {!!loginTips &&\n                    <div className=\"alert alert-warning\">{loginTips}</div>\n                }\n\n                <input type=\"text\" className=\"form-control\" value={loginToken} onChange={handleInputChange} onKeyPress={e => { e.key === 'Enter' && login() }} placeholder=\"登录口令\" />\n                <button className=\"btn btn-secondary mt-2\" onClick={register}>注册</button>\n                <button className=\"btn btn-primary mt-2\" onClick={login}>登录</button>\n                {showRegisterTips &&\n                    <Clipboard component=\"button\" className=\"btn btn-warning mt-2\" data-clipboard-text={loginToken}>复制登录口令</Clipboard>\n                }\n                <div className=\"alert alert-info mt-2\" role=\"alert\">\n                    注册无需填写任何信息,点击注册即会随机生成登录口令并注册!\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default LoginPage;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Axios from 'axios';\n\nimport { AuthContext, GetAuthTokenByLocal } from './AuthContext'\nimport './App.css';\nimport HomePage from './components/HomePage'\nimport LoginPage from './components/LoginPage'\n\n\nAxios.defaults.baseURL = 'http://192.168.2.181:3000';\n\nfunction App() {\n  const [authToken, setAuthToken] = React.useState('');\n\n  let aToken = GetAuthTokenByLocal();\n  if (aToken !== '' && aToken !== authToken) {\n    Axios.defaults.headers.common['X-Token'] = aToken;\n    setAuthToken(aToken);\n  }\n  React.useEffect(() => {\n\n  }, [authToken]);\n\n  return (\n    <AuthContext.Provider value={{ authToken, setAuthToken }}>\n      <Router>\n        <Switch>\n          <Route path=\"/login\">\n            <LoginPage />\n          </Route>\n          <Route path=\"/\">\n            <HomePage />\n          </Route>\n        </Switch>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}